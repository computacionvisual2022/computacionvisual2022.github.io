<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Showcase Template</title><link>https://computacionvisual2022.github.io/docs/workshops/</link><description>Recent content on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://computacionvisual2022.github.io/docs/workshops/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://computacionvisual2022.github.io/docs/workshops/1-Barrier-grid-animation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/docs/workshops/1-Barrier-grid-animation/</guid><description>Animación de rejilla de barrera # Introducción # La animación de rejilla de barrera es un efecto de animación creado al mover una superposición transparente a rayas a través de una composición de imágenes entrelazadas llamada kinegrama. Como los espacios en blanco del patrón son transparentes, a medida que la superposición se desliza a alta velocidad por el Kinegrama, se hacen visibles diferentes secciones del mismo. El cerebro relaciona esta sucesión de imágenes que aparecen juntas, creando la ilusión de movimiento fluido.</description></item><item><title/><link>https://computacionvisual2022.github.io/docs/workshops/2.1-3D-brush/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/docs/workshops/2.1-3D-brush/</guid><description>Brocha 3D # Introducción # Los gráficos por ordenador en 3D, a veces denominados CGI, 3DCGI o gráficos por ordenador tridimensionales (en contraste con los gráficos por ordenador en 2D), son gráficos que utilizan una representación tridimensional de datos geométricos (a menudo cartesianos) que se almacenan en el ordenador con el fin de realizar cálculos y renderizar imágenes en 2D. Las imágenes resultantes pueden almacenarse para su posterior visualización (posiblemente como una animación) o mostrarse en tiempo real.</description></item><item><title/><link>https://computacionvisual2022.github.io/docs/workshops/2.2-Texture-mapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/docs/workshops/2.2-Texture-mapping/</guid><description>Mapeado de Texturas # Introducción # El mapeado de texturas establece cómo se sitúa la textura sobre el objeto al momento de proyectarse. [1] El mapeo de texturas originalmente se refería al mapeo difuso , un método que simplemente mapeaba píxeles de una textura a una superficie 3D ("envolviendo" la imagen alrededor del objeto). Contexto # Texto aquí Subtitulo aquí # Texto aquí Resultados # Implementación alto nivel # "</description></item></channel></rss>