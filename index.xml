<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Showcase Template</title><link>https://computacionvisual2022.github.io/</link><description>Recent content in Introduction on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://computacionvisual2022.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://computacionvisual2022.github.io/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://computacionvisual2022.github.io/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://computacionvisual2022.github.io/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://computacionvisual2022.github.io/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://computacionvisual2022.github.io/docs/people/David-Leon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/docs/people/David-Leon/</guid><description>David Leon # Sobre mí # Estudiante de octavo semestre de pregrado en Ingeniería de Sistemas y Computación de la Universidad Nacional de Colombia, Sede Bogotá, sin experiencia aún en el campo, pero actualmente realizo un proceso de vinculación a una casa de desaxrrollo de software que trabaja con BBVA y he trabajado en instalación y mantenimiento de redes de internet. Intereses Académicos # En cuanto a lo académico me interesa el desarrollo de software, sobre todo el desarrollo web en la parte del frontend y manejo de bases de datos no sólo en backend sino a nivel general.</description></item><item><title/><link>https://computacionvisual2022.github.io/docs/people/Juan-David-Solano/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/docs/people/Juan-David-Solano/</guid><description>Juan David Solano # Sobre mí # Estudiante de último semestre de pregrado en Ingeniería de Sistemas y Computación de la Universidad Nacional de Colombia, Sede Bogotá, con experiencia laboral en ingeniería de datos, desarrollo web (Node.js, Vue.js, Django) y acercamiento personal al desarrollo móvil. Con dominio de varios lenguajes de programación, principalmente Python. Intereses Académicos # Estoy interesado por los lenguajes de programación, inteligencia artificial, blockchain y desarrollo de software.</description></item><item><title/><link>https://computacionvisual2022.github.io/docs/people/Miguel-Medellin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/docs/people/Miguel-Medellin/</guid><description>Miguel Medellín # Sobre mí # Estudiante de último semestre de pregrado en Ingeniería de Sistemas y Computación de la Universidad Nacional de Colombia, Sede Bogotá, con experiencia práctica y laboral en el desarrollo de aplicaciones orientadas a la web, con dominio en varios lenguajes de programación, principalmente javascript, conocimientos en el entorno de ejecución nodejs y la libreria reactjs. Intereses Académicos # Consecuencia de mi experiencia y estudio, me interesa el desarrollo de software orientado a la web, constantemente participo en proyectos de desarrollo, ultimamente con soluciones enfocadas a dispositivos móviles, intento mantener un balance de conocimiento para el desarrollo en frontend y backend (para ser un desarrollador full stack), me interesa más conocer y aprender paradigmas de programación que el progpio lenguaje de programación.</description></item><item><title/><link>https://computacionvisual2022.github.io/docs/workshops/1-Barrier-grid-animation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/docs/workshops/1-Barrier-grid-animation/</guid><description>Animación de rejilla de barrera # Introducción # La animación de rejilla de barrera es un efecto de animación creado al mover una superposición transparente a rayas a través de una composición de imágenes entrelazadas llamada kinegrama. Como los espacios en blanco del patrón son transparentes, a medida que la superposición se desliza a alta velocidad por el Kinegrama, se hacen visibles diferentes secciones del mismo. El cerebro relaciona esta sucesión de imágenes que aparecen juntas, creando la ilusión de movimiento fluido.</description></item><item><title/><link>https://computacionvisual2022.github.io/docs/workshops/2.1-3D-brush/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/docs/workshops/2.1-3D-brush/</guid><description>Brocha 3D # Introducción # Texto aquí Contexto # Texto aquí Subtitulo aquí # Texto aquí Gamepad API # Es una forma para que los desarrolladores accedan y respondan a las señales de gamepads y otros controladores de juegos de una manera simple y consistente. Contiene tres interfaces, dos eventos y una función especializada, para responder a la conexión y desconexión de los gamepads, y para acceder a otra información sobre los gamepads mismos, y qué botones y otros controles se están presionando actualmente.</description></item><item><title/><link>https://computacionvisual2022.github.io/docs/workshops/2.2-Texture-mapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisual2022.github.io/docs/workshops/2.2-Texture-mapping/</guid><description>Mapeado de Texturas # Introducción # Texto aquí Contexto # Texto aquí Subtitulo aquí # Texto aquí Resultados # Implementación alto nivel # " Implementación intermedio nivel # " Implementación bajo nivel # "</description></item></channel></rss>